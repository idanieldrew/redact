version: '3.9'
services:
    redact_application:
        build:
            args:
                user: idanieldrew
                uid: 1000
            context: docker/
            dockerfile: Dockerfile
        image: redact
        container_name: redact_application
        restart: unless-stopped
        depends_on:
            - redact_rabbitmq
        working_dir: /var/www
        volumes:
            - .:/var/www
            - ./docker/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./docker/php.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - redact_network

    redact_webserver:
        image: nginx:1.21.3
        container_name: redact_server
        restart: always
        tty: true
        ports:
            - "80:80"
        #      - "443:443"
        volumes:
            - .:/var/www
            - ./docker/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - redact_application
        networks:
            - redact_network

    redact_database:
        image: postgres:14.2-alpine
        container_name: redact_db
        restart: unless-stopped
        tty: true
        depends_on:
            - redact_application
        ports:
            - "54320:5432"
        environment:
            POSTGRES_DB: "redact"
            POSTGRES_USER: "dani"
            POSTGRES_PASSWORD: "password"
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        volumes:
            - dbdata:/var/lib/postgresql/data
        networks:
            - redact_network

    redact_cache:
        image: redis:7-alpine
        container_name: redact_redis
        depends_on:
            - redact_application
        ports:
            - "6379:6379"
        volumes:
            - cache-data:/data
            - ./docker/redis.conf:/redis.conf
        networks:
            - redact_network

    redact_elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2
        container_name: redact_elasticsearch
        environment:
            - discovery.type=single-node
            - ingest.geoip.downloader.enabled=false
            - xpack.security.enabled=false
        volumes:
            - elastics:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            redact_network:
                ipv4_address: ${CUSTOM_ELASTIC_IP}

    redact_rabbitmq:
        image: rabbitmq:3.11.3-management
        container_name: redact_rabbitmq
        tty: true
        environment:
            DEFAULT_VHOST: /
            DEFAULT_USER: guest
            DEFAULT_PASS: guest
        ports:
            - 5672:5672
            - 15672:15672
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq
            - rabbitmq-data2:/var/log/rabbitmq
        networks:
            - redact_network

    redact_kibana:
        image: docker.elastic.co/kibana/kibana:8.6.2
        container_name: redact_kibana
        environment:
            ELASTICSEARCH_HOSTS: http://redact_elasticsearch:9200
        depends_on:
            - redact_elasticsearch
        ports:
            - "5601:5601"
        networks:
            redact_network:
                ipv4_address: ${CUSTOM_KIBANA_IP}

    redact_filebeat:
        image: docker.elastic.co/beats/filebeat:8.6.2
        container_name: redact_filebeat
        volumes:
            - ./docker/file.yml:/usr/share/filebeat/filebeat.yml:ro
            - /var/lib/docker:/var/lib/docker/containers:ro
            - /var/run/docker.sock:/var/run/docker.sock
            - ./storage/logs:/usr/share/filebeat/mylog:rw
        networks:
            - redact_network

    redact_minio:
        image: minio/minio
        container_name: redact_minio
        hostname: minio_redact
        ports:
            - "9010:9000"
            - "9001:9001"
        volumes:
            - minio_storage:/data
        environment:
            MINIO_ROOT_USER: dani
            MINIO_ROOT_PASSWORD: password
        command: server --console-address ":9001" /data
        networks:
            - redact_network

networks:
    redact_network:
        ipam:
            driver: bridge
            config:
                - subnet: ${SUBNET}

volumes:
    dbdata:
        driver: local
    elastics:
        driver: local
    cache-data:
        driver: local
    rabbitmq-data:
        driver: local
    rabbitmq-data2:
        driver: local
    logstash:
        driver: local
    filebeat:
        driver: local
    minio_storage:
        driver: local
