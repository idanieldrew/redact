openapi: 3.0.3
info:
  title: idanieldrew/redact
  contact:
    email: danielgia35@gmail.com
  license:
    name: Apache 2.0
    url: https://github.com/idanieldrew/redact/blob/develop/LICENSE
  version: 2.0.1
tags:
  - name: auth
    description: Operations about authentication
paths:
  /api/auth/register (v1):
    post:
      tags:
        - auth
      summary: Create user
      description: This can only be done by the unique mail.
      operationId: Register User
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-register.v1'
      responses:
        default:
          description: Successfully register
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
  /api/auth/login (v1):
    post:
      tags:
        - auth
      summary: Login user
      description: Exist mai and correct password.
      operationId: Login User
      requestBody:
        description: login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User-login.v1'
      responses:
        default:
          description: Successfully login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
  /api/auth//email/verify/{id}/{hash} (v1):
    get:
      tags:
        - auth
      summary: verify
      operationId: id
      parameters:
        - name: id
          in: path
          description: ID user
          required: true
          schema:
            type: integer
        - name: hash
          in: path
          description: hash
          required: true
          schema:
            $ref: '#/components/schemas/User-login.v1'
      responses:
        default:
          description: ok,verify it

components:
  schemas:
    User-register.v1:
      type: object
      properties:
        name:
          type: string
          example: daniel
        email:
          type: string
          example: dan@dan.com
        password:
          type: string
          example: password
    User-login.v1:
      type: object
      properties:
        email:
          type: string
          example: dan@dan.com
        password:
          type: string
          example: password

    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Register:
      type: object
      properties:
        status:
          type: integer
          example: 201
        type:
          type: string
          example: Successfully register
        data:
          type: object
          properties:
            name:
              type: string
              example: daniel
            email:
              type: string
              example: dan@dan.com
        token:
          type: string
          example: 1|...
    Login:
      type: object
      properties:
        status:
          type: integer
          example: 200
        type:
          type: string
          example: Successfully login
        data:
          type: object
          properties:
            name:
              type: string
              example: daniel
            email:
              type: string
              example: dan@dan.com
        token:
          type: string
          example: 1|...

  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
      
